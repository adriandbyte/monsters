{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","src","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACnB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAI,UACJC,IAAG,+BAA0BH,EAAQI,GAAlC,4BAEP,6BAAKJ,EAAQK,OACb,6BAAKL,EAAQM,YCPZC,G,MAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OACI,qBAAKP,UAAU,YAAf,SACKO,EAASC,KAAI,SAACT,GAAD,OACV,cAAC,EAAD,CAAMA,QAASA,GAAcA,EAAQI,WCLxCM,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OACI,uBACIX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCPG,E,kDAtCX,aAAe,IAAD,8BACV,gBAcJH,aAAe,SAACI,GACZ,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACTH,YAAa,GACbV,SAAU,IALJ,E,qDASd,WAAqB,IAAD,OAChBc,MAAM,8CACDC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,SAAUkB,S,oBAOnD,WAAU,IAAD,EAC6BC,KAAKN,MAA/Bb,EADH,EACGA,SAAUU,EADb,EACaA,YACZU,EAAmBpB,EAASqB,QAAO,SAAC7B,GAAD,OACrCA,EAAQK,KAAKyB,cAAcC,SAASb,EAAYY,kBAGpD,OACI,sBAAK7B,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CACIU,YAAY,kBACZC,aAAce,KAAKf,eAEvB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAjClBI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ce6cee86.chunk.js","sourcesContent":["import React from 'react'\nimport './card.styles.css'\n\nexport const Card = ({ monster }) => {\n    return (\n        <div className=\"card-container\">\n            <img\n                alt=\"monster\"\n                src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\n            />\n            <h1>{monster.name}</h1>\n            <h2>{monster.email}</h2>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Card } from '../card/card.component'\nimport './card-list.styles.css'\n\nexport const CardList = ({ monsters }) => {\n    return (\n        <div className=\"card-list\">\n            {monsters.map((monster) => (\n                <Card monster={monster} key={monster.id} />\n            ))}\n        </div>\n    )\n}\n","import React from 'react'\nimport './search-box.styles.css'\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n    return (\n        <input\n            className=\"search\"\n            type=\"search\"\n            placeholder={placeholder}\n            onChange={handleChange}\n        />\n    )\n}\n","import React, { Component } from 'react'\nimport './App.css'\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\n\nclass App extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            searchField: '',\n            monsters: [],\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then((res) => res.json())\n            .then((users) => this.setState({ monsters: users }))\n    }\n\n    handleChange = (e) => {\n        this.setState({ searchField: e.target.value })\n    }\n\n    render() {\n        const { monsters, searchField } = this.state\n        const filteredMonsters = monsters.filter((monster) =>\n            monster.name.toLowerCase().includes(searchField.toLowerCase())\n        )\n\n        return (\n            <div className=\"App\">\n                <h1>Monsters Rolodex</h1>\n                <SearchBox\n                    placeholder=\"Search Monsters\"\n                    handleChange={this.handleChange}\n                />\n                <CardList monsters={filteredMonsters} />\n            </div>\n        )\n    }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}